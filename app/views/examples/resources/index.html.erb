<h3>Resource Access API</h3>

<div class="information-box">
	<p>View <a href="http://wiki.fitbit.com/display/API/Resource-Access-API">fitbit.com's resource access API</a> documentation.</p>
</div>

<div class="multiline-alert-box">
	<p>The resources examples are under development at this time.  What is present here is up-to-date, but new examples will be added as they are completed.</p>
</div>

<p>Fitbit considers a 'resource' to be any of the nouns associated with health tracking. Examples include foods consumed, activities participated in, characteristics of your tracker device, and body measurements.</p>

<h4><a name="start">Available Resources</a></h4>
<p>Each resource below will include sample code on how to access it using fitgem. I will generally defer to the Fitbit Developer site for complete API documentation as I don't wish this site to get out of date too quickly.  Instead I'll focus on just the mechanics of using the library to interface with the API.</p>
<p>If you are logged into the site and have connected your login with a Fitbit account, then in each section you'll also see the relevant data retrieved using the API described there.</p>
<ul class="toc">
	<li><a href="#userinfo">User Information</a>
	  <ul>
	    <li><a href="#retrievinguserinfo">Retrieving User Information</a></li>
  	  <li><a href="#userinfoinaview">User Information in a View</a></li>
    	<li><a href="#userinfoexample">User Information Example</a></li>
    </ul>
	</li>
	<li><a href="#body">Body Measurements</a></li>
	<li><a href="#activities">Activities</a>
	  <ul>
	    <li><a href="#retrieving-activities">Retrieving Activities</a></li>
  	  <li><a href="#logging-activities">Logging Activities</a></li>
    	<li><a href="#removing-activities">Removing Activities</a></li>
    </ul>
  </li>
	<li><a href="#foods">Foods</a></li>
</ul>

<h4><a name="userinfo">User Information</a></h4>
<div class="information-box">
	<p><a href="http://wiki.fitbit.com/display/API/API-Get-User-Info">View the Fitbit reference page for user information.</a></p>
</div>
<p>The user information interface is used to access whatever profile information that the user has allowed to be viewed publicly.  This includes information such as the user's name, fitbit user id, gender, height, etc.  <strong>Please note</strong> that the user must explicitly allow this info to be shared or else it will not show up in the data returned by the service.</p>

<h5><a name="retrievinguserinfo">Retrieving User Information</a></h5>
<p>In your controller action, for example:</p>
<pre>
def index
  unless current_user.fitbit_account.verified?
    flash[:alert] = "Your test account is not connected to
      a Fitbit account."
    redirect_to :action => :index and return
  end
  client = FitgemClientWrapper.new(current_user.fitbit_account)
  @info = client.user_info['user']
end
</pre>
<aside><a href="#start">Back to Top</a></aside>

<h5><a name="userinfoinaview">User Information in a View</a></h5>
<p>Below is example ERB code showing how the <code>@info</code> object is used in a view.</p>
<pre>
&lt;div class=&quot;fitbit-api-data&quot;&gt;
  &lt;div class=&quot;line-title&quot;&gt;User Information from Fitbit.com&lt;/div&gt;
  &lt;div class=&quot;line-item&quot;&gt;
		&lt;div class=&quot;label&quot;&gt;User Id:&lt;/div&gt;
		&lt;div class=&quot;value&quot;&gt;&lt;%= @info[&#x27;encodedId&#x27;] %&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class=&quot;line-item&quot;&gt;
		&lt;div class=&quot;label&quot;&gt;Display Name:&lt;/div&gt;
		&lt;div class=&quot;value&quot;&gt;&lt;%= @info[&#x27;displayName&#x27;] %&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class=&quot;line-item&quot;&gt;
		&lt;div class=&quot;label&quot;&gt;City:&lt;/div&gt;
		&lt;div class=&quot;value&quot;&gt;&lt;%= @info[&#x27;city&#x27;] %&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class=&quot;line-item&quot;&gt;
		&lt;div class=&quot;label&quot;&gt;State:&lt;/div&gt;
		&lt;div class=&quot;value&quot;&gt;&lt;%= @info[&#x27;state&#x27;] %&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class=&quot;line-item&quot;&gt;
		&lt;div class=&quot;label&quot;&gt;Gender:&lt;/div&gt;
		&lt;div class=&quot;value&quot;&gt;&lt;%= @info[&#x27;gender&#x27;] %&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class=&quot;line-item&quot;&gt;
		&lt;div class=&quot;label&quot;&gt;Date of Birth:&lt;/div&gt;
		&lt;div class=&quot;value&quot;&gt;&lt;%= @info[&#x27;dateOfBirth&#x27;] %&gt;&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
</pre>
<aside><a href="#start">Back to Top</a></aside>

<h5><a name="userinfoexample">User Information Example</a></h5>
<p>Below are the results of the above view code using your personal fitbit data.</p>
<% if user_signed_in? && current_user.fitbit_account.verified? %>


  <div class="fitbit-api-data">
    <div class="source">Live from Fitbit.com</div>
    <div class="line-title">User Information</div>
    <div class="line-item">
  		<div class="label">User Id:</div>
  		<div class="value"><%= @info['encodedId'] %></div>
  	</div>
  	<div class="line-item">
  		<div class="label">Display Name:</div>
  		<div class="value"><%= @info['displayName'] %></div>
  	</div>
  	<div class="line-item">
  		<div class="label">City:</div>
  		<div class="value"><%= @info['city'] %></div>
  	</div>
  	<div class="line-item">
  		<div class="label">State:</div>
  		<div class="value"><%= @info['state'] %></div>
  	</div>
  	<div class="line-item">
  		<div class="label">Gender:</div>
  		<div class="value"><%= @info['gender'] %></div>
  	</div>
  	<div class="line-item">
  		<div class="label">Date of Birth:</div>
  		<div class="value"><%= @info['dateOfBirth'] %></div>
  	</div>
  	<div class="end">&nbsp;</div>
  </div>

  <div style="clear:both;">&nbsp;</div>
<% elsif user_signed_in? %>
  <%= render :partial => 'examples/link' %>
<% else %>
  <%= render :partial => 'examples/login_and_link' %>
<% end %>
<aside><a href="#start">Back to Top</a></aside>

<h4><a name="body">Body Measurements</a></h4>
<div class="information-box">
	<p><a href="http://wiki.fitbit.com/display/API/API-Get-Body-Measurements">View the Fitbit reference page for body measurements.</a></p>
</div>
<p>Body measurements include such things as weight and BMI. The availability of the body measurements resource is strictly controlled by the privacy settings by the fitbit user, but if they set access to public then they are available through the API.</p>

<h5>Getting Access to Body Measurement Information</h5>
<p>In your controller action, for example:</p>
<pre>
def index
  unless current_user.fitbit_account.verified?
    flash[:alert] = "Your test account is not connected to
      a Fitbit account."
    redirect_to :action => :index and return
  end
  client = FitgemClientWrapper.new(current_user.fitbit_account)
  @body_measurements = client.body_measurements_on_date('today')['user']
end
</pre>
<aside><a href="#start">Back to Top</a></aside>

<h5>Body Measurements in a View</h5>
<p>Below is example ERB code showing how the <code>@body_measurements</code> object is used in a view.</p>
<pre>
&lt;div class=&quot;fitbit-api-data&quot;&gt;
  &lt;div class=&quot;line-title&quot;&gt;
    Body Measurement Information from Fitbit.com
  &lt;/div&gt;
  &lt;div class=&quot;line-item&quot;&gt;
    &lt;div class=&quot;label&quot;&gt;Today&#x27;s Weight:&lt;/div&gt;
    &lt;div class=&quot;value&quot;&gt;
      &lt;%= @body_measurements[&#x27;body&#x27;][&#x27;weight&#x27;] if @body_measurements
        &amp;&amp; @body_measurements[&#x27;body&#x27;] &amp;&amp;
        @body_measurements[&#x27;body&#x27;][&#x27;weight&#x27;] %&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</pre>
<aside><a href="#start">Back to Top</a></aside>

<h5>Body Measurements Example</h5>
<p>Below are the results of the above view code using your personal fitbit data. You may not see anything here if you have not flagged weight for public view.</p>
<% if user_signed_in? && current_user.fitbit_account.verified? %>

  <div class="fitbit-api-data">
    <div class="source">Live from Fitbit.com</div>
    <div class="line-title">Body Measurement Information</div>
    <div class="line-item">
  		<div class="label">Today's Weight:</div>
  		<div class="value">
  		  <%= @body_measurements['body']['weight'] if @body_measurements && @body_measurements['body'] && @body_measurements['body']['weight'] %>
  		</div>
  	</div>
  	<div class="end">&nbsp;</div>
  </div>

  <div style="clear:both;">&nbsp;</div>
<% elsif user_signed_in? %>
  <%= render :partial => 'examples/link_or_review' %>
<% else %>
  <%= render :partial => 'examples/login_and_link' %>
<% end %>
<aside><a href="#start">Back to Top</a></aside>

<h4><a name="activities">Activities</a></h4>
<div class="information-box">
	<p>View the Fitbit reference page for <a href="http://wiki.fitbit.com/display/API/API-Log-Activity">logging</a> and <a href="http://wiki.fitbit.com/display/API/API-Get-Time-Series">retrieving</a> activity data.</a></p>
</div>
<p>Activity data can be logged to the fitbit.com service, deleted from the service, and queried using various time-based or metadata-based methods.</p>

<h5><a name="retrieving-activities">Retrieving Activity Information</a></h5>
<p>Once you have an instance of the fitgem client object (for which <code>client.verified? == true</code> you have the ability to retrieve activity data in <strong>four ways</strong>.</p>
<ul>
  <li>Time series (custom date ranges)</li>
  <li>Recent activities</li>
  <li>Frequent activities</li>
  <li>Favorite activities</li>
</ul>
<pre>
unless current_user.fitbit_account.verified?
  flash[:alert] = "Your test account is not connected to
    a Fitbit account."
  redirect_to :action => :index and return
end
client = FitgemClientWrapper.new(current_user.fitbit_account)
@recent_activities = client.recent_activities
@frequent_activities = client.frequent_activities
@favorite_activities = client.favorite_activities
@activities_today = client.activities_on_date('today')
@activities_on_march_third = client.activities_on_date('2011-03-03')
</pre>
<p>The method <code>activities_on_date(date)</code> takes either a String in YYYY-MM-DD format, the strings 'today' or 'yesterday', or a Ruby Date object to retrieve relative dates.</p>
<p>The hash returned from the activities methods contains a list of the activities found in the query, as well as summary information about the activities.  An example is shown below (please note this is static data for illustration purposes.)</p>
<pre>
{"activities"=>
  [{"activityId"=>1020,
    "activityParentId"=>90001,
    "activityParentName"=>"Bicycling",
    "calories"=>148,
    "description"=>"Leisurely - 10 to 11.9mph",
    "distance"=>3.93,
    "duration"=>1200000,
    "isFavorite"=>true,
    "logId"=>1529651,
    "name"=>"Bicycling",
    "startTime"=>"08:31"},
   {"activityId"=>2130,
    "activityParentId"=>2130,
    "activityParentName"=>
     "Weight lifting",
    "calories"=>222,
    "description"=>"",
    "distance"=>0,
    "duration"=>3600000,
    "isFavorite"=>true,
    "logId"=>1529653,
    "name"=>
     "Weight lifting",
    "startTime"=>"09:00"},
   {"activityId"=>1020,
    "activityParentId"=>90001,
    "activityParentName"=>"Bicycling",
    "calories"=>147,
    "description"=>"Leisurely - 10 to 11.9mph",
    "distance"=>3.92,
    "duration"=>1190000,
    "isFavorite"=>true,
    "logId"=>1529652,
    "name"=>"Bicycling",
    "startTime"=>"10:30"}],
 "summary"=>
  {"activeScore"=>443,
   "caloriesOut"=>1633,
   "distances"=>
    [{"activity"=>"total", "distance"=>10.04},
     {"activity"=>"tracker", "distance"=>2.19},
     {"activity"=>"loggedActivities", "distance"=>7.85},
     {"activity"=>"veryActive", "distance"=>0.58},
     {"activity"=>"moderatelyActive", "distance"=>1.3},
     {"activity"=>"lightlyActive", "distance"=>0.29},
     {"activity"=>"sedentaryActive", "distance"=>0},
     {"activity"=>
       "Weight lifting",
      "distance"=>0},
     {"activity"=>"Bicycling", "distance"=>7.85}],
   "fairlyActiveMinutes"=>104,
   "lightlyActiveMinutes"=>29,
   "sedentaryMinutes"=>730,
   "steps"=>4845,
   "veryActiveMinutes"=>22}}
</pre>
<p>There is much you can distill from the returned data; in addition to the list of logged activities you get access to total distances traveled during activities, total 'active core' (a Fitbit measure of how active you are over the course of the day), and an analysis (via the Fitbit tracker) of how your activities break down across the sedentary-to-highly-active spectrum.</p>
<aside><a href="#start">Back to Top</a></aside>

<h5><a name="logging-activities">Logging Activity Information</a></h5>
<p>You may log completed activities for the user with the <code>log_activity</code> method.  It takes a hash of options (explained in more detail in the <a href="https://github.com/whazzmaster/fitgem/blob/master/lib/fitgem/activities.rb">comments</a>), and revolves around knowledge of the activity id.  See the <a href="http://wiki.fitbit.com/display/API/API-Log-Activity">fitbit documentation</a> for more information on the various types of activity id's.</p>
<p>The example below begins with the assumption that we know the activity id of the activity we want to log.  <strong>In practice</strong>, you'll likely need to search or browse for the activity by name to get the correct activity id.</p>
<pre>
unless current_user.fitbit_account.verified?
  flash[:alert] = "Your test account is not connected to
    a Fitbit account."
  redirect_to :action => :index and return
end
client = FitgemClientWrapper.new(current_user.fitbit_account)
client.log_activity({
  :activityId => 1020, # Bicyling
  :durationMillis => 1320000,
  :startTime => "08:33",
  :date => "2011-07-12",
  :distance => "3.93",
  :distanceUnit => Fitgem::ApiDistanceUnit.miles
})
</pre>
<aside><a href="#start">Back to Top</a></aside>

<h5><a name="removing-activities">Deleting Activity Information</a></h5>
<h6>Deleting a Logged Activity</h6>
<p>You can delete previously-logged activities if you have the id that was assigned to the logged activity.  The method call is straightforward; pass the logged-activity-id to <code>delete_logged_activity</code>.</p>
<h6>Removing a Favorite Activity</h6>
<p>It is also possible to remove an activity from a user's favorite activity list. Simply call <code>remove_favorite_activity</code> and pass in the activity id.</p>
<aside><a href="#start">Back to Top</a></aside>

<h4><a name="foods">Foods</a></h4>